// Code generated by goctl. DO NOT EDIT.
// Source: search.proto

package search

import (
	"context"

	"github.com/me2seeks/echo-hub/app/search/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SearchFeedsResp = pb.SearchFeedsResp
	SearchReq       = pb.SearchReq
	SearchUsersResp = pb.SearchUsersResp
	User            = pb.User

	Search interface {
		SearchUsers(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchUsersResp, error)
		SearchFeeds(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchFeedsResp, error)
	}

	defaultSearch struct {
		cli zrpc.Client
	}
)

func NewSearch(cli zrpc.Client) Search {
	return &defaultSearch{
		cli: cli,
	}
}

func (m *defaultSearch) SearchUsers(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchUsersResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.SearchUsers(ctx, in, opts...)
}

func (m *defaultSearch) SearchFeeds(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchFeedsResp, error) {
	client := pb.NewSearchClient(m.cli.Conn())
	return client.SearchFeeds(ctx, in, opts...)
}
