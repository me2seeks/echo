// Code generated by goctl. DO NOT EDIT.
package types

type FollowReq struct {
	UserID int64 `json:"userID"`
}

type FollowResp struct {
}

type FollowersReq struct {
	UserID int64 `json:"userID"`
}

type FollowersResp struct {
	Followers []int64 `json:"followers"`
}

type FollowingsReq struct {
	UserID int64 `json:"userID"`
}

type FollowingsResp struct {
	Followings []int64 `json:"followings"`
}

type LoginReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginResp struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type RegisterReq struct {
	Email    string `json:"email"`
	Handle   string `json:"handle"`
	Nickname string `json:"nickname"`
	Avatar   string `json:"avatar"`
	Password string `json:"password"`
}

type RegisterResp struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type UnfollowReq struct {
	UserID int64 `json:"userID"`
}

type UnfollowResp struct {
}

type UpdateUserInfoReq struct {
	Nickname string `json:"nickname"`
	Sex      int32  `json:"sex"`
	Avatar   string `json:"avatar"`
	Bio      string `json:"bio"`
}

type UpdateUserInfoResp struct {
}

type User struct {
	Id       int64  `json:"id"`
	Email    string `json:"email"`
	Nickname string `json:"nickname"`
	Handle   string `json:"handle"`
	Sex      int32  `json:"sex"`
	Avatar   string `json:"avatar"`
	Bio      string `json:"bio"`
}

type UserInfoReq struct {
	UserID int64 `form:"userID,optional"`
}

type UserInfoResp struct {
	UserInfo struct {
		Id       int64  `json:"id"`
		Email    string `json:"email"`
		Nickname string `json:"nickname"`
		Handle   string `json:"handle"`
		Sex      int32  `json:"sex"`
		Avatar   string `json:"avatar"`
		Bio      string `json:"bio"`
	} `json:"userInfo"`
}
