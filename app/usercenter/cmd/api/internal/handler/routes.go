// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	relation "github.com/me2seeks/echo-hub/app/usercenter/cmd/api/internal/handler/relation"
	user "github.com/me2seeks/echo-hub/app/usercenter/cmd/api/internal/handler/user"
	"github.com/me2seeks/echo-hub/app/usercenter/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// follow
				Method:  http.MethodPost,
				Path:    "/follow",
				Handler: relation.FollowHandler(serverCtx),
			},
			{
				// get followers
				Method:  http.MethodPost,
				Path:    "/followers",
				Handler: relation.FollowersHandler(serverCtx),
			},
			{
				// get following
				Method:  http.MethodPost,
				Path:    "/following",
				Handler: relation.FollowingHandler(serverCtx),
			},
			{
				// unfollow
				Method:  http.MethodPost,
				Path:    "/unfollow",
				Handler: relation.UnfollowHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// login
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				// register
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: user.RegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// get user info
				Method:  http.MethodGet,
				Path:    "/",
				Handler: user.DetailHandler(serverCtx),
			},
			{
				// update user info
				Method:  http.MethodPost,
				Path:    "/",
				Handler: user.UpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user"),
	)
}
