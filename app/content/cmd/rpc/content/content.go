// Code generated by goctl. DO NOT EDIT.
// Source: content.proto

package content

import (
	"context"

	"github.com/me2seeks/echo-hub/app/content/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment                  = pb.Comment
	CreateCommentReq         = pb.CreateCommentReq
	CreateCommentResp        = pb.CreateCommentResp
	CreateFeedReq            = pb.CreateFeedReq
	CreateFeedResp           = pb.CreateFeedResp
	DeleteCommentReq         = pb.DeleteCommentReq
	DeleteCommentResp        = pb.DeleteCommentResp
	DeleteFeedReq            = pb.DeleteFeedReq
	DeleteFeedResp           = pb.DeleteFeedResp
	Feed                     = pb.Feed
	GetCommentListByPageReq  = pb.GetCommentListByPageReq
	GetCommentListByPageResp = pb.GetCommentListByPageResp
	GetCommentListReq        = pb.GetCommentListReq
	GetCommentListResp       = pb.GetCommentListResp
	GetFeedListByPageReq     = pb.GetFeedListByPageReq
	GetFeedListByPageResp    = pb.GetFeedListByPageResp
	GetFeedListReq           = pb.GetFeedListReq
	GetFeedListResp          = pb.GetFeedListResp
	SearchFeedReq            = pb.SearchFeedReq
	SearchFeedResp           = pb.SearchFeedResp
	UpdateCommentReq         = pb.UpdateCommentReq
	UpdateCommentResp        = pb.UpdateCommentResp
	UpdateFeedReq            = pb.UpdateFeedReq
	UpdateFeedResp           = pb.UpdateFeedResp

	Content interface {
		GetFeedList(ctx context.Context, in *GetFeedListReq, opts ...grpc.CallOption) (*GetFeedListResp, error)
		GetFeedListByPage(ctx context.Context, in *GetFeedListByPageReq, opts ...grpc.CallOption) (*GetFeedListByPageResp, error)
		CreateFeed(ctx context.Context, in *CreateFeedReq, opts ...grpc.CallOption) (*CreateFeedResp, error)
		UpdateFeed(ctx context.Context, in *UpdateFeedReq, opts ...grpc.CallOption) (*UpdateFeedResp, error)
		DeleteFeed(ctx context.Context, in *DeleteFeedReq, opts ...grpc.CallOption) (*DeleteFeedResp, error)
		// comment
		GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error)
		GetCommentListByPage(ctx context.Context, in *GetCommentListByPageReq, opts ...grpc.CallOption) (*GetCommentListByPageResp, error)
		CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentResp, error)
		UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentResp, error)
		DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentResp, error)
	}

	defaultContent struct {
		cli zrpc.Client
	}
)

func NewContent(cli zrpc.Client) Content {
	return &defaultContent{
		cli: cli,
	}
}

func (m *defaultContent) GetFeedList(ctx context.Context, in *GetFeedListReq, opts ...grpc.CallOption) (*GetFeedListResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.GetFeedList(ctx, in, opts...)
}

func (m *defaultContent) GetFeedListByPage(ctx context.Context, in *GetFeedListByPageReq, opts ...grpc.CallOption) (*GetFeedListByPageResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.GetFeedListByPage(ctx, in, opts...)
}

func (m *defaultContent) CreateFeed(ctx context.Context, in *CreateFeedReq, opts ...grpc.CallOption) (*CreateFeedResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.CreateFeed(ctx, in, opts...)
}

func (m *defaultContent) UpdateFeed(ctx context.Context, in *UpdateFeedReq, opts ...grpc.CallOption) (*UpdateFeedResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.UpdateFeed(ctx, in, opts...)
}

func (m *defaultContent) DeleteFeed(ctx context.Context, in *DeleteFeedReq, opts ...grpc.CallOption) (*DeleteFeedResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.DeleteFeed(ctx, in, opts...)
}

// comment
func (m *defaultContent) GetCommentList(ctx context.Context, in *GetCommentListReq, opts ...grpc.CallOption) (*GetCommentListResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.GetCommentList(ctx, in, opts...)
}

func (m *defaultContent) GetCommentListByPage(ctx context.Context, in *GetCommentListByPageReq, opts ...grpc.CallOption) (*GetCommentListByPageResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.GetCommentListByPage(ctx, in, opts...)
}

func (m *defaultContent) CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.CreateComment(ctx, in, opts...)
}

func (m *defaultContent) UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.UpdateComment(ctx, in, opts...)
}

func (m *defaultContent) DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentResp, error) {
	client := pb.NewContentClient(m.cli.Conn())
	return client.DeleteComment(ctx, in, opts...)
}
