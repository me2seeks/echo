// Code generated by goctl. DO NOT EDIT.
// Source: interaction.proto

package server

import (
	"context"

	"github.com/me2seeks/echo-hub/app/interaction/cmd/rpc/internal/logic"
	"github.com/me2seeks/echo-hub/app/interaction/cmd/rpc/internal/svc"
	"github.com/me2seeks/echo-hub/app/interaction/cmd/rpc/pb"
)

type InteractionServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedInteractionServer
}

func NewInteractionServer(svcCtx *svc.ServiceContext) *InteractionServer {
	return &InteractionServer{
		svcCtx: svcCtx,
	}
}

func (s *InteractionServer) Follow(ctx context.Context, in *pb.FollowReq) (*pb.FollowResp, error) {
	l := logic.NewFollowLogic(ctx, s.svcCtx)
	return l.Follow(in)
}

func (s *InteractionServer) Unfollow(ctx context.Context, in *pb.UnfollowReq) (*pb.UnfollowResp, error) {
	l := logic.NewUnfollowLogic(ctx, s.svcCtx)
	return l.Unfollow(in)
}

func (s *InteractionServer) Followers(ctx context.Context, in *pb.FollowersReq) (*pb.FollowersResp, error) {
	l := logic.NewFollowersLogic(ctx, s.svcCtx)
	return l.Followers(in)
}

func (s *InteractionServer) Following(ctx context.Context, in *pb.FollowingReq) (*pb.FollowingResp, error) {
	l := logic.NewFollowingLogic(ctx, s.svcCtx)
	return l.Following(in)
}
