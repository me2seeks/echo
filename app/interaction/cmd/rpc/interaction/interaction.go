// Code generated by goctl. DO NOT EDIT.
// Source: interaction.proto

package interaction

import (
	"context"

	"github.com/me2seeks/echo-hub/app/interaction/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FollowReq     = pb.FollowReq
	FollowResp    = pb.FollowResp
	FollowersReq  = pb.FollowersReq
	FollowersResp = pb.FollowersResp
	FollowingReq  = pb.FollowingReq
	FollowingResp = pb.FollowingResp
	UnfollowReq   = pb.UnfollowReq
	UnfollowResp  = pb.UnfollowResp

	Interaction interface {
		Follow(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*FollowResp, error)
		Unfollow(ctx context.Context, in *UnfollowReq, opts ...grpc.CallOption) (*UnfollowResp, error)
		Followers(ctx context.Context, in *FollowersReq, opts ...grpc.CallOption) (*FollowersResp, error)
		Following(ctx context.Context, in *FollowingReq, opts ...grpc.CallOption) (*FollowingResp, error)
	}

	defaultInteraction struct {
		cli zrpc.Client
	}
)

func NewInteraction(cli zrpc.Client) Interaction {
	return &defaultInteraction{
		cli: cli,
	}
}

func (m *defaultInteraction) Follow(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*FollowResp, error) {
	client := pb.NewInteractionClient(m.cli.Conn())
	return client.Follow(ctx, in, opts...)
}

func (m *defaultInteraction) Unfollow(ctx context.Context, in *UnfollowReq, opts ...grpc.CallOption) (*UnfollowResp, error) {
	client := pb.NewInteractionClient(m.cli.Conn())
	return client.Unfollow(ctx, in, opts...)
}

func (m *defaultInteraction) Followers(ctx context.Context, in *FollowersReq, opts ...grpc.CallOption) (*FollowersResp, error) {
	client := pb.NewInteractionClient(m.cli.Conn())
	return client.Followers(ctx, in, opts...)
}

func (m *defaultInteraction) Following(ctx context.Context, in *FollowingReq, opts ...grpc.CallOption) (*FollowingResp, error) {
	client := pb.NewInteractionClient(m.cli.Conn())
	return client.Following(ctx, in, opts...)
}
