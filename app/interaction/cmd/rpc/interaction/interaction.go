// Code generated by goctl. DO NOT EDIT.
// Source: interaction.proto

package interaction

import (
	"context"

	"github.com/me2seeks/echo-hub/app/interaction/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateLikeReq    = pb.CreateLikeReq
	CreateLikeResp   = pb.CreateLikeResp
	DeleteLikeReq    = pb.DeleteLikeReq
	DeleteLikeResp   = pb.DeleteLikeResp
	GetLikeCountReq  = pb.GetLikeCountReq
	GetLikeCountResp = pb.GetLikeCountResp

	Interaction interface {
		CreateLike(ctx context.Context, in *CreateLikeReq, opts ...grpc.CallOption) (*CreateLikeResp, error)
		DeleteLike(ctx context.Context, in *DeleteLikeReq, opts ...grpc.CallOption) (*DeleteLikeResp, error)
		GetLikeCount(ctx context.Context, in *GetLikeCountReq, opts ...grpc.CallOption) (*GetLikeCountResp, error)
	}

	defaultInteraction struct {
		cli zrpc.Client
	}
)

func NewInteraction(cli zrpc.Client) Interaction {
	return &defaultInteraction{
		cli: cli,
	}
}

func (m *defaultInteraction) CreateLike(ctx context.Context, in *CreateLikeReq, opts ...grpc.CallOption) (*CreateLikeResp, error) {
	client := pb.NewInteractionClient(m.cli.Conn())
	return client.CreateLike(ctx, in, opts...)
}

func (m *defaultInteraction) DeleteLike(ctx context.Context, in *DeleteLikeReq, opts ...grpc.CallOption) (*DeleteLikeResp, error) {
	client := pb.NewInteractionClient(m.cli.Conn())
	return client.DeleteLike(ctx, in, opts...)
}

func (m *defaultInteraction) GetLikeCount(ctx context.Context, in *GetLikeCountReq, opts ...grpc.CallOption) (*GetLikeCountResp, error) {
	client := pb.NewInteractionClient(m.cli.Conn())
	return client.GetLikeCount(ctx, in, opts...)
}
